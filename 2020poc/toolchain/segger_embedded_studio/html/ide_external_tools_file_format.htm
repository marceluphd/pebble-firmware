<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
<html>
  <head>
    <title>External Tools file format</title>
    <meta content="text/html; charset=UTF-8" http-equiv="Content-Type"/>
    <meta content="RAL PrepHTML" name="GENERATOR"/>
    
    
    <link rel="STYLESHEET" type="text/css" href="./rwt/styles/ses-default.css"/>
    <link rel="STYLESHEET" type="text/css" href="./rwt/styles/ses.css"/>
    <link rel="STYLESHEET" type="text/css" href="./rwt/styles/rwt-doc-page.css"/>
    <link rel="STYLESHEET" type="text/css" href="./rwt/styles/theme.css"/>
    <script type="text/javascript" language="javascript" src="./rwt/scripts/jquery-latest.js"><!--><-->
</script>
    <script type="text/javascript" language="javascript" src="./rwt/scripts/rwt.js"><!--><-->
</script>
    <script type="text/javascript" language="javascript" src="./rwt/scripts/rwt-doc-page.js"><!--><-->
</script>
    
  </head>

  <body>
    <div id="rwt-content">
      
<p>SEGGER Embedded Studio external-tool configuration files are structured using XML
syntax for its simple construction and parsing.</p><h3>Tool configuration files</h3><p>The SEGGER Embedded Studio application will read the tool configuration file when it
starts up.  By default, SEGGER Embedded Studio will read the file
<b>$(StudioUserDir)/tools.xml</b>.  </p><h3>Structure</h3><p>All tools are wrapped in a <b>tools</b> element:</p>
<pre class="rwt-code"><span class="rwt-code-text"/><span class="rwt-code-keyword">&lt;</span><span class="rwt-code-markup">tools</span><span class="rwt-code-keyword">></span>
<span class="rwt-code-text">  &#8286;</span>
<span class="rwt-code-text"/><span class="rwt-code-keyword">&lt;/</span><span class="rwt-code-markup">tools</span><span class="rwt-code-keyword">></span><span class="rwt-code-text"/>
<span class="rwt-code-text"/></pre><p>Inside the tools element are <b>item</b> elements that define each tool:</p>
<pre class="rwt-code"><span class="rwt-code-text"/><span class="rwt-code-keyword">&lt;</span><span class="rwt-code-markup">tools</span><span class="rwt-code-keyword">></span>
<span class="rwt-code-text">  </span><span class="rwt-code-keyword">&lt;</span><span class="rwt-code-markup">item </span><span class="rwt-code-attribute">name</span><span class="rwt-code-disassembly">=</span><span class="rwt-code-attribute"/><span class="rwt-code-disassembly">"</span><span class="rwt-code-literal">logical name</span><span class="rwt-code-disassembly">"</span><span class="rwt-code-attribute"/><span class="rwt-code-keyword">></span><span class="rwt-code-text"/>
<span class="rwt-code-text">    &#8286;</span>
<span class="rwt-code-text">  </span><span class="rwt-code-keyword">&lt;/</span><span class="rwt-code-markup">item</span><span class="rwt-code-keyword">></span><span class="rwt-code-text"/>
<span class="rwt-code-text"/><span class="rwt-code-keyword">&lt;/</span><span class="rwt-code-markup">tools</span><span class="rwt-code-keyword">></span><span class="rwt-code-text"/>
<span class="rwt-code-text"/></pre><p>The <b>item</b> element requires an <b>name</b> attribute, which is an internal
name for the tool, and has an optional <i>wait</i> element.  When SEGGER Embedded Studio
invokes the tool on a file or project, it uses the <i>wait</i> element to
determine whether it should wait for the external tool to complete before
continuing.  If the <i>wait</i> attribute is not provided or is set to <i>yes</i>,
SEGGER Embedded Studio will wait for external tool to complete.</p><p>The way that the tool is presented in SEGGER Embedded Studio is configured by elements
inside the </p><ul><li>element.</li></ul><h5>menu</h5><p>The <b>menu</b> element defines the wording used inside menus.  You can place
a shortcut to the menu using an ampersand, which must be escaped using <b>&amp;amp</b>
in XML, before the shortcut letter.  For instance:</p>
<pre class="rwt-code"><span class="rwt-code-text"/><span class="rwt-code-keyword">&lt;</span><span class="rwt-code-markup">menu</span><span class="rwt-code-keyword">></span><span class="rwt-code-markup">&amp;amp;</span><span class="rwt-code-text">PC-lint (Unit Check)</span><span class="rwt-code-keyword">&lt;/</span><span class="rwt-code-markup">menu</span><span class="rwt-code-keyword">></span><span class="rwt-code-text"/>
<span class="rwt-code-text"/></pre><h5>text</h5><p>The optional <b>text</b> element defines the wording used in contexts other than
menus, for instance when the tool appears as a tool button with a label.  If
<b>text</b> is not provided, the tool's textual appearance outside the menu is
taken from the <b>menu</b> element (and is presented without an shortcut underline).
For instance:</p>
<pre class="rwt-code"><span class="rwt-code-text"/><span class="rwt-code-keyword">&lt;</span><span class="rwt-code-markup">text</span><span class="rwt-code-keyword">></span><span class="rwt-code-text">PC-lint (Unit Check)</span><span class="rwt-code-keyword">&lt;/</span><span class="rwt-code-markup">text</span><span class="rwt-code-keyword">></span><span class="rwt-code-text"/>
<span class="rwt-code-text"/></pre><h5>tip</h5><p>The optional <b>tip</b> element defines the status tip, shown on the status
line, when moving over the tool inside SEGGER Embedded Studio:</p>
<pre class="rwt-code"><span class="rwt-code-text"/><span class="rwt-code-keyword">&lt;</span><span class="rwt-code-markup">tip</span><span class="rwt-code-keyword">></span><span class="rwt-code-text">Run a PC-lint unit checkout on the selected file or folder</span><span class="rwt-code-keyword">&lt;/</span><span class="rwt-code-markup">tip</span><span class="rwt-code-keyword">></span><span class="rwt-code-text"/>
<span class="rwt-code-text"/></pre><h5>key</h5><p>The optional <b>key</b> element defines the accelerator key, or key chord, to use
to invoke the tool using the keyboard.  You can construct the key sequence
using modifiers <b>Ctrl</b>, <b>Shift</b>, and <b>Alt</b>, and can specify more than one
key in a sequence (note: Windows and Linux only; OS X does not provide key
chords).  For instance:</p>
<pre class="rwt-code"><span class="rwt-code-text"/><span class="rwt-code-keyword">&lt;</span><span class="rwt-code-markup">key</span><span class="rwt-code-keyword">></span><span class="rwt-code-text">Ctrl+L, Ctrl+I</span><span class="rwt-code-keyword">&lt;/</span><span class="rwt-code-markup">key</span><span class="rwt-code-keyword">></span><span class="rwt-code-text"/>
<span class="rwt-code-text"/></pre><h5>message</h5><p>The optional <b>message</b> element defines the text shown in the tool log in
SEGGER Embedded Studio when running the tool.  For example:</p>
<pre class="rwt-code"><span class="rwt-code-text"/><span class="rwt-code-keyword">&lt;</span><span class="rwt-code-markup">message</span><span class="rwt-code-keyword">></span><span class="rwt-code-text">Linting</span><span class="rwt-code-keyword">&lt;/</span><span class="rwt-code-markup">message</span><span class="rwt-code-keyword">></span><span class="rwt-code-text"/>
<span class="rwt-code-text"/></pre><h5>match</h5><p>The optional <b>match</b> element defines which documents the tool will operator
on.  The match is performed using the file extension of the document.  If
the file extension of the document matches one of the wildcards provided,
the tool will run on that document.  If there is no <b>match</b> element, the
tool will run on all documents.  For instance:</p>
<pre class="rwt-code"><span class="rwt-code-text"/><span class="rwt-code-keyword">&lt;</span><span class="rwt-code-markup">match</span><span class="rwt-code-keyword">></span><span class="rwt-code-text">*.c;*.cpp</span><span class="rwt-code-keyword">&lt;/</span><span class="rwt-code-markup">match</span><span class="rwt-code-keyword">></span><span class="rwt-code-text"/>
<span class="rwt-code-text"/></pre><h5>commands</h5><p>The <b>commands</b> element defines the command line to run to invoke the tool.
The command line is expanded using macros applicable to the file derived
from the current build configuration and the project settings.  Most importantly,
the standard <b>$(InputPath)</b> macro expands to a full pathname for the target file.</p><p>Additional macros constructed by SEGGER Embedded Studio are:</p><ul><li><b>$(DEFINES)</b> is the set of <b>-D</b> options applicable to the current file,
  derived from the current configuration and project settings.
</li>
<li><b>$(INCLUDES)</b> is the set of <b>-I</b> options applicable to the current file,
  derived from the current configuration and project settings.</li></ul><p>For instance:</p>
<pre class="rwt-code"><span class="rwt-code-text"/><span class="rwt-code-keyword">&lt;</span><span class="rwt-code-markup">commands</span><span class="rwt-code-keyword">></span>
<span class="rwt-code-text">  </span><span class="rwt-code-markup">&amp;quot;</span><span class="rwt-code-text">$(LINTDIR)/lint-nt</span><span class="rwt-code-markup">&amp;quot;</span><span class="rwt-code-text"> -i$(LINTDIR)/lnt </span><span class="rwt-code-markup">&amp;quot;</span><span class="rwt-code-text">$(LINTDIR)/lnt/co-gcc.lnt</span><span class="rwt-code-markup">&amp;quot;</span>
<span class="rwt-code-text">  $(DEFINES) $(INCLUDES) -D__GNUC__ -u -b +macros -w2 -e537 +fie +ffn -width(0,4) -hF1</span>
<span class="rwt-code-text">  </span><span class="rwt-code-markup">&amp;quot;</span><span class="rwt-code-text">-format=%f:%l:%C:s%t:s%m</span><span class="rwt-code-markup">&amp;quot;</span><span class="rwt-code-text"> </span><span class="rwt-code-markup">&amp;quot;</span><span class="rwt-code-text">$(InputPath)</span><span class="rwt-code-markup">&amp;quot;</span>
<span class="rwt-code-text"/><span class="rwt-code-keyword">&lt;/</span><span class="rwt-code-markup">commands</span><span class="rwt-code-keyword">></span><span class="rwt-code-text"/>
<span class="rwt-code-text"/></pre><p>In this example we intend <b>$(LINTDIR)</b> to point to the directly where PC-lint
is installed and for <b>$(LINTDIR)</b> to be defined as a SEGGER Embedded Studio global macro.
You can set global macros using 
<b>Tools > Options > Building > Global Macros</b>.</p><p>Note that additional <b>&amp;quot</b> entities are placed around pathnames in the
<b>commands</b> section&mdash;this is to ensure that paths that contain spaces are
correctly interpreted when the command is executed by SEGGER Embedded Studio.</p> 
    </div>
  </body>
</html>