<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
<html>
  <head>
    <title>Project macros</title>
    <meta content="text/html; charset=UTF-8" http-equiv="Content-Type"/>
    <meta content="RAL PrepHTML" name="GENERATOR"/>
    
    
    <link rel="STYLESHEET" type="text/css" href="./rwt/styles/ses-default.css"/>
    <link rel="STYLESHEET" type="text/css" href="./rwt/styles/ses.css"/>
    <link rel="STYLESHEET" type="text/css" href="./rwt/styles/rwt-doc-page.css"/>
    <link rel="STYLESHEET" type="text/css" href="./rwt/styles/theme.css"/>
    <script type="text/javascript" language="javascript" src="./rwt/scripts/jquery-latest.js"><!--><-->
</script>
    <script type="text/javascript" language="javascript" src="./rwt/scripts/rwt.js"><!--><-->
</script>
    <script type="text/javascript" language="javascript" src="./rwt/scripts/rwt-doc-page.js"><!--><-->
</script>
    
  </head>

  <body>
    <div id="rwt-content">
      
<p>You can use macros to modify the way the project system refers to files.</p><p>Macros are divided into four classes:</p><ul><li><i>System macros</i> defined by SEGGER Embedded Studio relay information about the
    environment, such as paths to common directories.
</li>
<li><i>Global macros</i> are saved in the environment and are shared across
    all solutions and projects. Typically, you would set up paths to libraries
    and any external items here.
</li>
<li><i>Project macros</i> are saved as project options in the project file
    and can define values specific to the solution or project in which they are
    defined.
</li>
<li><i>Build macros</i> are generated by the project system when you build
    your project.</li></ul><h3>System macros</h3><p>System macros are defined by SEGGER Embedded Studio itself and as such are read-only.
System macros can be used in project options, environment settings
and to refer to files. See <a href="ide_system_macros_help.htm">System macros list</a>
for the list of System macros.</p><h3>Global macros</h3><p>Global macros are store in the environment option <a href="ide_environment_options_building_help.htm">Build Macros</a>.</p><h5>To define a global macro:</h5><ol><li> Use <b>Tools > Options</b> to show the environment options dialog.
  </li>
<li> In the <b>Environment Options</b> dialog's <b>Building</b> group, select the <b>Build Macros</b> option.
  </li>
<li> Click the ellipsis button on the right.
  </li>
<li> Set the macro using the syntax <i>name</i> = <i>replacement text</i>.</li></ol><h3>Project macros</h3><h5>To define a project macro:</h5><p>To set the project macros:</p><ol><li> Select the appropriate solution/project in the <b>Project Explorer</b>.
  </li>
<li> Use <b>Project > Options</b> to show the project options dialog.
  </li>
<li> In the <b>Project Options</b> dialog's <b>General Options</b> group, select the <b>Macros</b> option.
  </li>
<li> Click the ellipsis button on the right.
  </li>
<li> Set the macro using the syntax <i>name</i> = <i>replacement text</i>.</li></ol><h3>Build macros</h3><p>Build macros are defined by the project system for a build of a
given project node. See <a href="ide_build_macros_help.htm">Build macros list</a>
for the list of build macros.</p><h3>Using macros</h3><p>You can use a macro for a project option or environment setting by using the
$(macro) syntax. For example, the <b>Object File Name</b> option has a default
value of <tt>$(IntDir)/$(InputName)$(OBJ)</tt>.</p><p>You can also specify a default value for a macro if it is undefined using
the $(macro:default) syntax. For example, <tt>$(MyMacro:0)</tt> would 
expand to <tt>0</tt> if the macro <tt>MyMacro</tt> has not been defined.</p> 
    </div>
  </body>
</html>