<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
<html>
  <head>
    <title>Memory Map file format</title>
    <meta content="text/html; charset=UTF-8" http-equiv="Content-Type"/>
    <meta content="RAL PrepHTML" name="GENERATOR"/>
    
    
    <link rel="STYLESHEET" type="text/css" href="./rwt/styles/ses-default.css"/>
    <link rel="STYLESHEET" type="text/css" href="./rwt/styles/ses.css"/>
    <link rel="STYLESHEET" type="text/css" href="./rwt/styles/rwt-doc-page.css"/>
    <link rel="STYLESHEET" type="text/css" href="./rwt/styles/theme.css"/>
    <script type="text/javascript" language="javascript" src="./rwt/scripts/jquery-latest.js"><!--><-->
</script>
    <script type="text/javascript" language="javascript" src="./rwt/scripts/rwt.js"><!--><-->
</script>
    <script type="text/javascript" language="javascript" src="./rwt/scripts/rwt-doc-page.js"><!--><-->
</script>
    
  </head>

  <body>
    <div id="rwt-content">
      
<p>SEGGER Embedded Studio memory-map files are structured using XML syntax for its simple 
construction and parsing.</p><p>The first entry of the project file defines the XML document type 
used to validate the file format.</p>
<pre class="rwt-code"><span class="rwt-code-text"/><span class="rwt-code-keyword">&lt;</span><span class="rwt-code-markup">!DOCTYPE </span><span class="rwt-code-attribute">Board_Memory_Definition_File</span><span class="rwt-code-keyword">></span><span class="rwt-code-text"/>
<span class="rwt-code-text"/></pre><p>The next entry is the <tt>Root</tt> element. There can only be one <tt>Root</tt> element 
in a memory map file:</p>
<pre class="rwt-code"><span class="rwt-code-text"/><span class="rwt-code-keyword">&lt;</span><span class="rwt-code-markup">Root </span><span class="rwt-code-attribute">name</span><span class="rwt-code-disassembly">=</span><span class="rwt-code-attribute"/><span class="rwt-code-disassembly">"</span><span class="rwt-code-literal">My Board</span><span class="rwt-code-disassembly">"</span><span class="rwt-code-attribute"/><span class="rwt-code-keyword">></span><span class="rwt-code-text"/>
<span class="rwt-code-text"/></pre><p>A <tt>Root</tt> element has a <tt>name</tt> attribute &mdash; every element in a memory map
file has a <tt>name</tt> attribute. Names should be unique within a hierarchy level. 
Within a <tt>Root</tt> element, there are <tt>MemorySegment</tt> elements that represent regions 
within the memory map.</p>
<pre class="rwt-code"><span class="rwt-code-text"/><span class="rwt-code-keyword">&lt;</span><span class="rwt-code-markup">Root </span><span class="rwt-code-attribute">name</span><span class="rwt-code-disassembly">=</span><span class="rwt-code-attribute"/><span class="rwt-code-disassembly">"</span><span class="rwt-code-literal">My Board</span><span class="rwt-code-disassembly">"</span><span class="rwt-code-attribute"/><span class="rwt-code-keyword">></span><span class="rwt-code-text"/>
<span class="rwt-code-text">  </span><span class="rwt-code-keyword">&lt;</span><span class="rwt-code-markup">MemorySegment </span><span class="rwt-code-attribute">name</span><span class="rwt-code-disassembly">=</span><span class="rwt-code-attribute"/><span class="rwt-code-disassembly">"</span><span class="rwt-code-literal">Flash</span><span class="rwt-code-disassembly">"</span><span class="rwt-code-attribute"> start</span><span class="rwt-code-disassembly">=</span><span class="rwt-code-attribute"/><span class="rwt-code-disassembly">"</span><span class="rwt-code-literal">0x1000</span><span class="rwt-code-disassembly">"</span><span class="rwt-code-attribute"> size</span><span class="rwt-code-disassembly">=</span><span class="rwt-code-attribute"/><span class="rwt-code-disassembly">"</span><span class="rwt-code-literal">0x200</span><span class="rwt-code-disassembly">"</span><span class="rwt-code-attribute"> access</span><span class="rwt-code-disassembly">=</span><span class="rwt-code-attribute"/><span class="rwt-code-disassembly">"</span><span class="rwt-code-literal">ReadOnly</span><span class="rwt-code-disassembly">"</span><span class="rwt-code-attribute"/><span class="rwt-code-keyword">></span><span class="rwt-code-text"/>
<span class="rwt-code-text"/></pre><p><tt>MemorySegment</tt> elements have the following attributes:</p><ul><li><i>start</i>:&nbsp;&nbsp;The start address of the memory segment. A simple expression, usually a hexadecimal number with a 0x prefix.
</li>
<li><i>size</i>:&nbsp;&nbsp;The size of the memory segment. A simple expression, usually a hexadecimal number with a 0x prefix.
</li>
<li><i>access</i>:&nbsp;&nbsp;The permissible access types of the memory segment. One of
  <tt>ReadOnly</tt>, <tt>Read/Write</tt>, <tt>WriteOnly</tt>, or <tt>None</tt>.
</li>
<li><i>address_symbol</i>:&nbsp;&nbsp;A symbolic name for the start address of the memory segment.
</li>
<li><i>size_symbol</i>:&nbsp;&nbsp;A symbolic name for the size of the memory segment.
</li>
<li><i>address_symbol</i>:&nbsp;&nbsp;A symbolic name for the end address of the memory segment.</li></ul><p><tt>RegisterGroup</tt> elements are used to organize registers into groups.
<tt>Register</tt> elements are used to define peripheral registers:</p>
<pre class="rwt-code"><span class="rwt-code-text"> </span><span class="rwt-code-keyword">&lt;</span><span class="rwt-code-markup">Root </span><span class="rwt-code-attribute">name</span><span class="rwt-code-disassembly">=</span><span class="rwt-code-attribute"/><span class="rwt-code-disassembly">"</span><span class="rwt-code-literal">My Board</span><span class="rwt-code-disassembly">"</span><span class="rwt-code-attribute"> </span><span class="rwt-code-keyword">></span><span class="rwt-code-text"/>
<span class="rwt-code-text">  </span><span class="rwt-code-keyword">&lt;</span><span class="rwt-code-markup">MemorySegment </span><span class="rwt-code-attribute">name</span><span class="rwt-code-disassembly">=</span><span class="rwt-code-attribute"/><span class="rwt-code-disassembly">"</span><span class="rwt-code-literal">System</span><span class="rwt-code-disassembly">"</span><span class="rwt-code-attribute"> start</span><span class="rwt-code-disassembly">=</span><span class="rwt-code-attribute"/><span class="rwt-code-disassembly">"</span><span class="rwt-code-literal">0x2000</span><span class="rwt-code-disassembly">"</span><span class="rwt-code-attribute"> size</span><span class="rwt-code-disassembly">=</span><span class="rwt-code-attribute"/><span class="rwt-code-disassembly">"</span><span class="rwt-code-literal">0x200</span><span class="rwt-code-disassembly">"</span><span class="rwt-code-attribute"> </span><span class="rwt-code-keyword">></span><span class="rwt-code-text"/>
<span class="rwt-code-text">    </span><span class="rwt-code-keyword">&lt;</span><span class="rwt-code-markup">RegisterGroup </span><span class="rwt-code-attribute">name</span><span class="rwt-code-disassembly">=</span><span class="rwt-code-attribute"/><span class="rwt-code-disassembly">"</span><span class="rwt-code-literal">Peripheral1</span><span class="rwt-code-disassembly">"</span><span class="rwt-code-attribute"> start</span><span class="rwt-code-disassembly">=</span><span class="rwt-code-attribute"/><span class="rwt-code-disassembly">"</span><span class="rwt-code-literal">0x2100</span><span class="rwt-code-disassembly">"</span><span class="rwt-code-attribute"> size</span><span class="rwt-code-disassembly">=</span><span class="rwt-code-attribute"/><span class="rwt-code-disassembly">"</span><span class="rwt-code-literal">0x10</span><span class="rwt-code-disassembly">"</span><span class="rwt-code-attribute"> </span><span class="rwt-code-keyword">></span><span class="rwt-code-text"/>
<span class="rwt-code-text">      </span><span class="rwt-code-keyword">&lt;</span><span class="rwt-code-markup">Register </span><span class="rwt-code-attribute">name</span><span class="rwt-code-disassembly">=</span><span class="rwt-code-attribute"/><span class="rwt-code-disassembly">"</span><span class="rwt-code-literal">Register1</span><span class="rwt-code-disassembly">"</span><span class="rwt-code-attribute"> start</span><span class="rwt-code-disassembly">=</span><span class="rwt-code-attribute"/><span class="rwt-code-disassembly">"</span><span class="rwt-code-literal">+0x8</span><span class="rwt-code-disassembly">"</span><span class="rwt-code-attribute"> size</span><span class="rwt-code-disassembly">=</span><span class="rwt-code-attribute"/><span class="rwt-code-disassembly">"</span><span class="rwt-code-literal">4</span><span class="rwt-code-disassembly">"</span><span class="rwt-code-attribute"> </span><span class="rwt-code-keyword">></span><span class="rwt-code-text"/>
<span class="rwt-code-text"/></pre><p><tt>RegisterGroup</tt> elements have the same attributes as <tt>MemorySegment</tt> elements. <tt>Register</tt> elements
have the following attributes:</p><ul><li><i>name</i>:&nbsp;&nbsp;Register names should be valid C/C++ identifier names, i.e., alphanumeric characters 
  and underscores are allowed but names cannot start with a number.
</li>
<li><i>start</i>:&nbsp;&nbsp;The start address of the memory segment. Either a C-style hexadecimal number
  or, if given a <tt>+</tt> prefix, an offset from the enclosing element's start address.
</li>
<li><i>size</i>:&nbsp;&nbsp;The size of the register in bytes, either 1, 2, or 4.
</li>
<li><i>access</i>:&nbsp;&nbsp;The same as the <tt>access</tt> attribute of the <tt>MemorySegment</tt> element.
</li>
<li><i>address_symbol</i>:&nbsp;&nbsp;The same as the <tt>address_symbol</tt> attribute of the <tt>MemorySegment</tt> element.</li></ul><p>A <tt>Register</tt> element can contain <tt>BitField</tt> elements that represent the bits in a peripheral register:</p>
<pre class="rwt-code"><span class="rwt-code-text"> </span><span class="rwt-code-keyword">&lt;</span><span class="rwt-code-markup">Root </span><span class="rwt-code-attribute">name</span><span class="rwt-code-disassembly">=</span><span class="rwt-code-attribute"/><span class="rwt-code-disassembly">"</span><span class="rwt-code-literal">My Board</span><span class="rwt-code-disassembly">"</span><span class="rwt-code-attribute"> </span><span class="rwt-code-keyword">></span><span class="rwt-code-text"/>
<span class="rwt-code-text">  </span><span class="rwt-code-keyword">&lt;</span><span class="rwt-code-markup">MemorySegment </span><span class="rwt-code-attribute">name</span><span class="rwt-code-disassembly">=</span><span class="rwt-code-attribute"/><span class="rwt-code-disassembly">"</span><span class="rwt-code-literal">System</span><span class="rwt-code-disassembly">"</span><span class="rwt-code-attribute"> start</span><span class="rwt-code-disassembly">=</span><span class="rwt-code-attribute"/><span class="rwt-code-disassembly">"</span><span class="rwt-code-literal">0x2000</span><span class="rwt-code-disassembly">"</span><span class="rwt-code-attribute"> size</span><span class="rwt-code-disassembly">=</span><span class="rwt-code-attribute"/><span class="rwt-code-disassembly">"</span><span class="rwt-code-literal">0x200</span><span class="rwt-code-disassembly">"</span><span class="rwt-code-attribute"> </span><span class="rwt-code-keyword">></span><span class="rwt-code-text"/>
<span class="rwt-code-text">    </span><span class="rwt-code-keyword">&lt;</span><span class="rwt-code-markup">RegisterGroup </span><span class="rwt-code-attribute">name</span><span class="rwt-code-disassembly">=</span><span class="rwt-code-attribute"/><span class="rwt-code-disassembly">"</span><span class="rwt-code-literal">Peripheral1</span><span class="rwt-code-disassembly">"</span><span class="rwt-code-attribute"> start</span><span class="rwt-code-disassembly">=</span><span class="rwt-code-attribute"/><span class="rwt-code-disassembly">"</span><span class="rwt-code-literal">0x2100</span><span class="rwt-code-disassembly">"</span><span class="rwt-code-attribute"> size</span><span class="rwt-code-disassembly">=</span><span class="rwt-code-attribute"/><span class="rwt-code-disassembly">"</span><span class="rwt-code-literal">0x10</span><span class="rwt-code-disassembly">"</span><span class="rwt-code-attribute"> </span><span class="rwt-code-keyword">></span><span class="rwt-code-text"/>
<span class="rwt-code-text">      </span><span class="rwt-code-keyword">&lt;</span><span class="rwt-code-markup">Register </span><span class="rwt-code-attribute">name</span><span class="rwt-code-disassembly">=</span><span class="rwt-code-attribute"/><span class="rwt-code-disassembly">"</span><span class="rwt-code-literal">Register1</span><span class="rwt-code-disassembly">"</span><span class="rwt-code-attribute"> start</span><span class="rwt-code-disassembly">=</span><span class="rwt-code-attribute"/><span class="rwt-code-disassembly">"</span><span class="rwt-code-literal">+0x8</span><span class="rwt-code-disassembly">"</span><span class="rwt-code-attribute"> size</span><span class="rwt-code-disassembly">=</span><span class="rwt-code-attribute"/><span class="rwt-code-disassembly">"</span><span class="rwt-code-literal">4</span><span class="rwt-code-disassembly">"</span><span class="rwt-code-attribute"> </span><span class="rwt-code-keyword">></span><span class="rwt-code-text"/>
<span class="rwt-code-text">        </span><span class="rwt-code-keyword">&lt;</span><span class="rwt-code-markup">BitField </span><span class="rwt-code-attribute">name</span><span class="rwt-code-disassembly">=</span><span class="rwt-code-attribute"/><span class="rwt-code-disassembly">"</span><span class="rwt-code-literal">Bits_0_to_3</span><span class="rwt-code-disassembly">"</span><span class="rwt-code-attribute"> start</span><span class="rwt-code-disassembly">=</span><span class="rwt-code-attribute"/><span class="rwt-code-disassembly">"</span><span class="rwt-code-literal">0</span><span class="rwt-code-disassembly">"</span><span class="rwt-code-attribute"> size</span><span class="rwt-code-disassembly">=</span><span class="rwt-code-attribute"/><span class="rwt-code-disassembly">"</span><span class="rwt-code-literal">4</span><span class="rwt-code-disassembly">"</span><span class="rwt-code-attribute"> </span><span class="rwt-code-keyword">/></span><span class="rwt-code-text"/>
<span class="rwt-code-text"/></pre><p><tt>BitField</tt> elements have the following attributes:</p><ul><li><i>name</i>:&nbsp;&nbsp;The same as the <tt>name</tt> attribute of the <tt>RegisterGroup</tt> element.
</li>
<li><i>start</i>:&nbsp;&nbsp;The starting bit position, 0&ndash;31.
</li>
<li><i>size</i>:&nbsp;&nbsp;The total number of bits, 1&ndash;32.</li></ul><p>A <tt>Bitfield</tt> element can contain <tt>Enum</tt> elements:</p>
<pre class="rwt-code"><span class="rwt-code-text"/><span class="rwt-code-keyword">&lt;</span><span class="rwt-code-markup">Root </span><span class="rwt-code-attribute">name</span><span class="rwt-code-disassembly">=</span><span class="rwt-code-attribute"/><span class="rwt-code-disassembly">"</span><span class="rwt-code-literal">My Board</span><span class="rwt-code-disassembly">"</span><span class="rwt-code-attribute"> </span><span class="rwt-code-keyword">></span><span class="rwt-code-text">  </span>
<span class="rwt-code-text">  </span><span class="rwt-code-keyword">&lt;</span><span class="rwt-code-markup">RegisterGroup </span><span class="rwt-code-attribute">name</span><span class="rwt-code-disassembly">=</span><span class="rwt-code-attribute"/><span class="rwt-code-disassembly">"</span><span class="rwt-code-literal">Peripheral1</span><span class="rwt-code-disassembly">"</span><span class="rwt-code-attribute"> start</span><span class="rwt-code-disassembly">=</span><span class="rwt-code-attribute"/><span class="rwt-code-disassembly">"</span><span class="rwt-code-literal">0x2100</span><span class="rwt-code-disassembly">"</span><span class="rwt-code-attribute"> size</span><span class="rwt-code-disassembly">=</span><span class="rwt-code-attribute"/><span class="rwt-code-disassembly">"</span><span class="rwt-code-literal">0x10</span><span class="rwt-code-disassembly">"</span><span class="rwt-code-attribute"> </span><span class="rwt-code-keyword">></span><span class="rwt-code-text"/>
<span class="rwt-code-text">    </span><span class="rwt-code-keyword">&lt;</span><span class="rwt-code-markup">Register </span><span class="rwt-code-attribute">name</span><span class="rwt-code-disassembly">=</span><span class="rwt-code-attribute"/><span class="rwt-code-disassembly">"</span><span class="rwt-code-literal">Register1</span><span class="rwt-code-disassembly">"</span><span class="rwt-code-attribute"> start</span><span class="rwt-code-disassembly">=</span><span class="rwt-code-attribute"/><span class="rwt-code-disassembly">"</span><span class="rwt-code-literal">+0x8</span><span class="rwt-code-disassembly">"</span><span class="rwt-code-attribute"> size</span><span class="rwt-code-disassembly">=</span><span class="rwt-code-attribute"/><span class="rwt-code-disassembly">"</span><span class="rwt-code-literal">4</span><span class="rwt-code-disassembly">"</span><span class="rwt-code-attribute"> </span><span class="rwt-code-keyword">></span><span class="rwt-code-text"/>
<span class="rwt-code-text">      </span><span class="rwt-code-keyword">&lt;</span><span class="rwt-code-markup">BitField </span><span class="rwt-code-attribute">name</span><span class="rwt-code-disassembly">=</span><span class="rwt-code-attribute"/><span class="rwt-code-disassembly">"</span><span class="rwt-code-literal">Bits_0_to_3</span><span class="rwt-code-disassembly">"</span><span class="rwt-code-attribute"> start</span><span class="rwt-code-disassembly">=</span><span class="rwt-code-attribute"/><span class="rwt-code-disassembly">"</span><span class="rwt-code-literal">0</span><span class="rwt-code-disassembly">"</span><span class="rwt-code-attribute"> size</span><span class="rwt-code-disassembly">=</span><span class="rwt-code-attribute"/><span class="rwt-code-disassembly">"</span><span class="rwt-code-literal">4</span><span class="rwt-code-disassembly">"</span><span class="rwt-code-attribute"> </span><span class="rwt-code-keyword">/></span><span class="rwt-code-text"/>
<span class="rwt-code-text">        </span><span class="rwt-code-keyword">&lt;</span><span class="rwt-code-markup">Enum </span><span class="rwt-code-attribute">name</span><span class="rwt-code-disassembly">=</span><span class="rwt-code-attribute"/><span class="rwt-code-disassembly">"</span><span class="rwt-code-literal">Enum3</span><span class="rwt-code-disassembly">"</span><span class="rwt-code-attribute"> start</span><span class="rwt-code-disassembly">=</span><span class="rwt-code-attribute"/><span class="rwt-code-disassembly">"</span><span class="rwt-code-literal">3</span><span class="rwt-code-disassembly">"</span><span class="rwt-code-attribute"> </span><span class="rwt-code-keyword">/></span><span class="rwt-code-text"/>
<span class="rwt-code-text">        </span><span class="rwt-code-keyword">&lt;</span><span class="rwt-code-markup">Enum </span><span class="rwt-code-attribute">name</span><span class="rwt-code-disassembly">=</span><span class="rwt-code-attribute"/><span class="rwt-code-disassembly">"</span><span class="rwt-code-literal">Enum5</span><span class="rwt-code-disassembly">"</span><span class="rwt-code-attribute"> start</span><span class="rwt-code-disassembly">=</span><span class="rwt-code-attribute"/><span class="rwt-code-disassembly">"</span><span class="rwt-code-literal">5</span><span class="rwt-code-disassembly">"</span><span class="rwt-code-attribute"> </span><span class="rwt-code-keyword">/></span><span class="rwt-code-text"/>
<span class="rwt-code-text"/></pre><p>You can import CMSIS SVD files (see <a target="_blank" href="http://www.onarm.com/">http://www.onarm.com/</a>) into a memory map using the 
<tt>ImportSVD</tt> element:</p>
<pre class="rwt-code"><span class="rwt-code-text"/><span class="rwt-code-keyword">&lt;</span><span class="rwt-code-markup">ImportSVD </span><span class="rwt-code-attribute">filename</span><span class="rwt-code-disassembly">=</span><span class="rwt-code-attribute"/><span class="rwt-code-disassembly">"</span><span class="rwt-code-literal">$(TargetsDir)/targets/Manufacturer1/Processor1.svd.xml</span><span class="rwt-code-disassembly">"</span><span class="rwt-code-attribute"/><span class="rwt-code-keyword">></span><span class="rwt-code-text"/>
<span class="rwt-code-text"/></pre><p>The <tt>filename</tt> attribute is an absolute filename which is macro-expanded using
SEGGER Embedded Studio for ARM system macros.</p><p>When a memory map file is loaded either for the memory map viewer or to be
used for linking or debugging, it is preprocessed using the (as yet
undocumented) SEGGER Embedded Studio for ARM XML preprocessor.</p> 
    </div>
  </body>
</html>