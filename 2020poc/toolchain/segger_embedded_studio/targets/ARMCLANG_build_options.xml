<!DOCTYPE Generic_Project_Options>
<options>
  <property tool="compiler" name="armclang_cl_optimization_level" type="Enumeration" group="ARMCLANG Compiler Options" short="Optimization" long="Code optimization" default="None">
    <enum value="None" option="-O0" />
    <enum value="Level 1" option="-O1" />
    <enum value="Level 2" option="-O2" />
    <enum value="Level 3" option="-O3" />
    <enum value="Space (Os)" option="-Os" />
    <enum value="Space (Oz)" option="-Oz" />
  </property>
  <property tool="compiler" name="armclang_cl_enable_debug_info" type="Enumeration" group="ARMCLANG Compiler Options" short="Include Debug Information" long="Specifies whether symbolic debug information is generated." default="Yes">
    <enum value="Yes" option="-g" />
    <enum value="No" option="" />
  </property>
  <property tool="compiler" name="armclang_cl_cpu" type="Enumeration" group="ARMCLANG Compiler Options" short="CPU" long="Select the processor variant for compiler" default="Cortex-M3" option2="-mcpu=" values="&#xa;    Cortex-A5;&#xa;    Cortex-A7;&#xa;    Cortex-A8;&#xa;    Cortex-A9;&#xa;    Cortex-A12;&#xa;    Cortex-A15;&#xa;    Cortex-A17;&#xa;    Cortex-M0;&#xa;    Cortex-M0plus;&#xa;    Cortex-M1;&#xa;    Cortex-M3;&#xa;    Cortex-M4;&#xa;    Cortex-M7;&#xa;    Cortex-M23;&#xa;    Cortex-M33;&#xa;    Cortex-M35P;&#xa;    Cortex-R4;&#xa;    Cortex-R4F;&#xa;    SC000;&#xa;    SC300" />
  <property tool="compiler" name="armclang_cl_fpabi" type="Enumeration" group="ARMCLANG Compiler Options" short="FP ABI" long="Select the floating point abi" default="soft" option2="-mfloat-abi=" values="soft;softfp;hard" />
  <property tool="compiler" name="armclang_cl_fpu" type="Enumeration" group="ARMCLANG Compiler Options" short="FPU" long="Select the FPU architecture for the compiler" default="softvfp" option2="-mfpu=" values="&#xa;    crypto-neon-fp-armv8;&#xa;    fp-armv8;&#xa;    fpv4-sp-d16;&#xa;    fpv5-d16;&#xa;    fpv5-sp-d16;&#xa;    neon;&#xa;    neon-fp16;&#xa;    neon-fp-armv8;&#xa;    neon-vfpv4;&#xa;    none;&#xa;    softvfp;&#xa;    vfpv3;&#xa;    vfpv3-d16;&#xa;    vfpv3-d16-fp16;&#xa;    vfpv3-fp16;&#xa;    vfpv3xd;&#xa;    vfpv3xd-fp16;&#xa;    vfpv4;&#xa;    vfpv4-d16" />
  <property tool="assembler;linker" name="armasm_cl_cpu" type="Enumeration" group="ARMCLANG Assembler/Linker Options" short="CPU" long="Select the architecture or processor variant for the assembler and linker" default="Cortex-M3" option2="--cpu=" values="&#xa;    6-M;&#xa;    6S-M;&#xa;    7-A;&#xa;    7-R;&#xa;    7-M;&#xa;    7E-M;&#xa;    7-A.security;&#xa;    8-M.Base;&#xa;    8-M.Main;&#xa;    8-M.Main.dsp;&#xa;    Cortex-M0;&#xa;    Cortex-M0plus;&#xa;    SC000;&#xa;    Cortex-M1;&#xa;    Cortex-M1.os_extension;&#xa;    Cortex-M1.no_os_extension;&#xa;    Cortex-M3;&#xa;    Cortex-M3-rev0;&#xa;    SC300;&#xa;    Cortex-M4;&#xa;    Cortex-M4.no_fp;&#xa;    Cortex-M7;&#xa;    Cortex-M7.fp.sp;&#xa;    Cortex-M7.no_fp;&#xa;    Cortex-M23;&#xa;    Cortex-M33;&#xa;    Cortex-M33.no_fp;&#xa;    Cortex-M33.no_dsp;&#xa;    Cortex-M33.no_dsp.no_fp;&#xa;    Cortex-M35P;&#xa;    Cortex-M35P.no_fp;&#xa;    Cortex-M35P.no_dsp;&#xa;    Cortex-M35P.no_dsp.no_fp;&#xa;    Cortex-R4;&#xa;    Cortex-R4F;&#xa;    Cortex-A5;&#xa;    Cortex-A5.no_neon;&#xa;    Cortex-A5.no_neon.no_vfp;&#xa;    Cortex-A7;&#xa;    Cortex-A7.no_neon;&#xa;    Cortex-A7.no_neon.no_vfp;&#xa;    Cortex-A8;&#xa;    Cortex-A8.no_neon;&#xa;    Cortex-A8NoNEON;&#xa;    Cortex-A9;&#xa;    Cortex-A9.no_neon;&#xa;    Cortex-A9.no_neon.no_vfp;&#xa;    Cortex-A12;&#xa;    Cortex-A12.no_neon.no_vfp;&#xa;    Cortex-A15;&#xa;    Cortex-A15.no_neon;&#xa;    Cortex-A15.no_neon.no_vfp;&#xa;    Cortex-A17;&#xa;    Cortex-A17.no_neon.no_vfp" />
  <property tool="assembler;linker" name="armasm_cl_fpu" type="Enumeration" group="ARMCLANG Assembler/Linker Options" short="FPU" long="Select the FPU architecture for the assembler and linker" default="SoftVFP" option2="--fpu=" values="&#xa;    VFPv3;&#xa;    VFPv3_FP16;&#xa;    VFPv3_D16;&#xa;    VFPv3_D16_FP16;&#xa;    VFPv4;&#xa;    VFPv4_D16;&#xa;    FPv4-SP;&#xa;    FPv5_D16;&#xa;    FPv5-SP;&#xa;    SoftVFP;&#xa;    SoftVFP+VFPv3;&#xa;    SoftVFP+VFPv3_FP16;&#xa;    SoftVFP+VFPv3_D16;&#xa;    SoftVFP+VFPv3_D16_FP16;&#xa;    SoftVFP+VFPv4;&#xa;    SoftVFP+VFPv4_D16;&#xa;    SoftVFP+FPv4-SP;&#xa;    SoftVFP+FPv5_D16;&#xa;    SoftVFP+FPv5-SP;&#xa;    FP-ARMv8;&#xa;    SoftVFP+FP-ARMv8;&#xa;    None" />
  <property name="c_system_include_directories" default="$(KEIL_TOOLKIT_DIR)/ARMCLANG/include;$(KEIL_TOOLKIT_DIR)/ARMCLANG/include/libcxx" />
  <property name="external_archive_command" default="&quot;$(KEIL_TOOLKIT_DIR)/ARMCLANG/bin/armar&quot; -rs &quot;$(RelTargetPath)&quot; $(Objects)" />
  <property name="external_assemble_command" default="&quot;$(KEIL_TOOLKIT_DIR)/ARMCLANG/bin/armasm&quot; $(AsmOptions) &quot;$(RelInputPath)&quot; -o &quot;$(RelTargetPath)&quot; --diag_style=gnu --brief_diagnostics" />
  <property name="external_c_compile_command" default="&quot;$(KEIL_TOOLKIT_DIR)/ARMCLANG/bin/armclang&quot; -x c -c --target=arm-arm-none-eabi $(COptions) $(COnlyOptions) $(Defines) $(Includes) &quot;$(RelInputPath)&quot; -MD -MF &quot;$(RelDependencyPath)&quot; -o &quot;$(RelTargetPath)&quot;" />
  <property name="external_cpp_compile_command" default="&quot;$(KEIL_TOOLKIT_DIR)/ARMCLANG/bin/armclang&quot; -x c++ -c --target=arm-arm-none-eabi $(COptions) $(CppOnlyOptions) $(Defines) $(Includes) &quot;$(RelInputPath)&quot; -MD -MF &quot;$(RelDependencyPath)&quot; -o &quot;$(RelTargetPath)&quot;" />
  <property name="external_link_command" default="&quot;$(KEIL_TOOLKIT_DIR)/ARMCLANG/bin/armlink&quot; $(LinkOptions) $(Objects) -o &quot;$(RelTargetPath)&quot; --list &quot;$(RelMapPath)&quot; --map" />
  <property name="linker_post_build_command" default="&quot;$(KEIL_TOOLKIT_DIR)/ARMCLANG/bin/fromelf&quot; --i32 --output=&quot;$(PostLinkOutputFilePath)&quot; &quot;$(RelTargetPath)&quot;" />
  <property name="linker_post_build_command_output_file" default="$(OutDir)/$(ProjectName).hex" />
</options>
